 //   reader.readAsArrayBuffer(this.firstFile);
    
    //   this.socket.emit("file-upload", {
    //     name: "nina",
    //     data: formData
    //   })
      
     // sending file to the backend
    //   axios
    //     .post("http://localhost:4500/upload", formData)
    //     .then(res => {
    //       console.log(res);
    //     })
    //     .catch(err => {
    //       console.log(err);
    //     });


//  /* var angles = Array(1000).fill(0);
//         // var delta = 6.28/1000;
//         // var angle = 0;
//         // for (let step = 0; step < 1000; step++) {
//         //     angles[step] = angles.push(delta);
//         //     angle = delta + angle;
//         // }
//         // console.log(typeof(this.received_data["model-1"]))
//         // console.log(typeof(angle))
        
//         // const zip = (a, b) => a.map((k, i) => [k, b[i]]);
//         // console.log(zip(angles, this.received_data["model-1"]));
//         // const zip = (a, b) => a.map((k, i) => [k, b[i]]);
//          // var temp_array = this.received_data["model-1"];
//           // var temp_arr_2  = Object.values(temp_array);

//           // console.log(Array.isArray(temp_arr_2));

//           // console.log(angles)
          
          
                    
//           // const zip = (a, b) => a.map((k, i) => [k, b[i]]);
//           // console.log(zip(angles, this.received_data["model-1"]));

//           // TODP selecte the main g elemnt and clear it of all
//           // var main_g = d3.select("div#container").select("#demo1").select("")





// render_precision: function() {
      //   console.log("inside precision");
      //   this.socket = io("http://localhost:3000");
      //   this.socket.emit("precision");
      //   // const zip = (arr, ...arrs) => {
      //   //   return arr.map((val, i) => arrs.reduce((a, arr) => [...a, arr[i]], [val]));
      //   // }
      //   this.socket.on("precision_data_from_server", function(data){
      //     // console.log(data);
      //     this.received_data = data;
      //     // var angles = this.angles_setup(1000);
      //     var angles = [];
      //     var delta = 6.28/1000.0;
      //     var angle = 0.0;
      //     for (let step = 0; step < 1000; step++) {
      //         angles[step] = angle;
      //         angle = delta + angle;
      //     }
          
      //     var model_names = Object.keys(this.received_data);
      //     // console.log(model_names);
      //     var data_to_render = {};
      //     model_names.forEach(model_name => {
      //       var temp_array = this.received_data[model_name];
      //       var temp_arr_2  = Object.values(temp_array);
      //       // var zip_array = zip(angles, temp_arr_2);
      //       // console.log(zip_array);
      //       var map_1 = temp_arr_2.map(x => Math.floor(x*10.0)) ;
      //       // console.log(map_1);
      //       data_to_render[model_name] = map_1;
      //     });
      //     // console.log(data_to_render);
      //     this.p_data = data_to_render;
         
      //     var svg = d3.select("div#container").select("#demo1").select('#main');
      //     svg.selectAll("*").remove();
         
      //     for (let i = 0 ; i < model_names.length; i++) {
      //       console.log(data_to_render[model_names[i]]);
      //       // Create and append the multiple outer arcs
      //       svg.append('g')
      //           .append('path')
      //           .style('fill', 'none')  
      //           .datum(data_to_render[model_names[i]])              
      //           .attr('d', 
      //           d3.lineRadial()
      //             .angle((d,ii) => angles[ii]) 
      //             .radius((d) => d + (i)*20 + 200)
      //             .curve(d3.curveCatmullRom)
      //           )
      //           .attr("fill", "none")
      //           .attr("stroke", "black");      
      //     }         

      //   });
      // },
      // render_recall: function() {
      //   console.log("inside recall");
      //   this.socket = io("http://localhost:3000");
      //   this.socket.emit("recall");
      //   this.socket.on("recall_data_from_server", function(data){
      //     this.received_data = data;
      //     var angles = [];
      //     var delta = 6.28/1000.0;
      //     var angle = 0.0;
      //     for (let step = 0; step < 1000; step++) {
      //         angles[step] = angle;
      //         angle = delta + angle;
      //     }
          
      //     var model_names = Object.keys(this.received_data);
      //     var data_to_render = {};
      //     model_names.forEach(model_name => {
      //       var temp_array = this.received_data[model_name];
      //       var temp_arr_2  = Object.values(temp_array);
      //       // var zip_array = zip(angles, temp_arr_2);
      //       // console.log(zip_array);
      //       var map_1 = temp_arr_2.map(x => Math.floor(x*10.0)) ;
      //       // console.log(map_1);
      //       data_to_render[model_name] = map_1;
      //     });
      //     // console.log(data_to_render);
      //     this.r_data = data_to_render;
         
      //     var svg = d3.select("div#container").select("#demo1").select('#main');
      //     svg.selectAll("*").remove();
         
      //     for (let i = 0 ; i < model_names.length; i++) {
      //       console.log(data_to_render[model_names[i]]);
      //       // Create and append the multiple outer arcs
      //       svg.append('g')
      //           .append('path')
      //           .style('fill', 'none')  
      //           .datum(data_to_render[model_names[i]])              
      //           .attr('d', 
      //           d3.lineRadial()
      //             .angle((d,ii) => angles[ii]) 
      //             .radius((d) => d + (i)*20 + 200)
      //             .curve(d3.curveCatmullRom)
      //           )
      //           .attr("fill", "none")
      //           .attr("stroke", "black");      
      //     }         

      //   });
      // },